import{am as e,a as t}from"../vendor.js";class a{constructor(e){var{artifact:t,mergeConfig:a,preload:i}=e;this.artifact=t,this.preload=i,this.config=a(t.ply,{fadeSpeed:1,targetName:"target_"}),this.currentPly=!1}afterLoadModel(e){var{engine:t,preload:a}=e;this.engine=t,this.audioElements=a.assets.audioElements,this.points=t.model.getObjectByName("plyGroup"),this.points.children.forEach((e=>{var a="".concat(this.config.targetName).concat(e.geometry.name),i=t.model.getObjectByName(a);if(i){var{x:o,y:r,z:s}=i.position;e.position.set(o,r,s);var{x:n,y:l,z:m}=i.rotation;e.rotation.set(n,l,m);var{x:c,y:p,z:d}=i.scale;e.scale.set(c,p,d)}e.material.transparent=!0,e.material.opacity=0}))}onTouch(e){e.forEach((e=>{var{node:t}=e,a=t.name.split("_").pop(),i=this.points.children.find((e=>e.geometry.name===a));this.currentPly!==i&&(this.currentPly=i)}))}tick(a){var{delta:i}=a;if(this.engine.modelSpawned){var o=this.config.fadeSpeed*i;this.points.children.forEach(((a,i)=>{var{material:r}=a,{ele:s}=this.audioElements.find((e=>e.config.audio===a.geometry.name));if(this.currentPly!==a){if(r.opacity>0&&(r.opacity-=1.3*o),s)if(!e&&s.volume>0){var n=Math.max(0,s.volume-1.3*o);t.fn(s.setVolume)?s.setVolume(n):s.volume=n}else s.pause(),s.currentTime=0}else if(r.opacity<1&&(r.opacity+=.8*o),s&&(s.paused&&s.play(),!e&&s.volume<1)){var l=Math.min(1,s.volume+.8*o);t.fn(s.setVolume)?s.setVolume(l):s.volume=l}}))}}}export{a as default};
