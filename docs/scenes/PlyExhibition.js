import{a as e}from"../vendor.js";class t{constructor(e){var{artifact:t,mergeConfig:a,preload:i}=e;this.artifact=t,this.preload=i,this.config=a(t.ply,{fadeSpeed:1,targetName:"target_"}),this.currentPly=!1}afterLoadModel(e){var{engine:t,preload:a}=e;this.engine=t,this.audioElements=a.assets.audioElements,this.points=t.model.getObjectByName("plyGroup"),this.points.children.forEach((e=>{var a="".concat(this.config.targetName).concat(e.geometry.name),i=t.model.getObjectByName(a);if(i){var{x:o,y:r,z:s}=i.position;e.position.set(o,r,s);var{x:n,y:l,z:m}=i.rotation;e.rotation.set(n,l,m);var{x:c,y:p,z:d}=i.scale;e.scale.set(c,p,d)}e.material.transparent=!0,e.material.opacity=0}))}onTouch(e){e.forEach((e=>{var{node:t}=e,a=t.name.split("_").pop(),i=this.points.children.find((e=>e.geometry.name===a));this.currentPly!==i&&(this.currentPly=i)}))}tick(t){var{delta:a}=t;if(this.engine.modelSpawned){var i=this.config.fadeSpeed*a;this.points.children.forEach(((t,a)=>{var{material:o}=t,{ele:r}=this.audioElements.find((e=>e.config.audio===t.geometry.name));if(this.currentPly!==t){if(o.opacity>0&&(o.opacity-=1.3*i),r)if(r.volume>0){var s=Math.max(0,r.volume-1.3*i);e.fn(r.setVolume)?r.setVolume(s):r.volume=s}else r.pause(),r.currentTime=0}else if(o.opacity<1&&(o.opacity+=.8*i),r&&(r.paused&&r.play(),r.volume<1)){var n=Math.min(1,r.volume+.8*i);e.fn(r.setVolume)?r.setVolume(n):r.volume=n}}))}}}export{t as default};
